{"version":3,"sources":["../../src/lib/zip.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAM,MAAM,SAAN,GAAM,GAAY;AAAA;;AACtB,MAAI,SAAS,OAAO,IAAP,CAAY,SAAZ,EAAuB,GAAvB,CAA2B;AAAA,WAAO,WAAU,GAAV,CAAP;AAAA,GAA3B,CAAb;AACA,MAAI,eAAe,OAAO,GAAP,CAAW;AAAA,WAAS,MAAM,MAAf;AAAA,GAAX,CAAnB;;AAEA,QAAM,SAAN,CAAgB,GAAhB,GAAsB,YAAW;AAC/B,WAAO,KAAK,GAAL,CAAS,KAAT,CAAe,IAAf,EAAqB,IAArB,CAAP;AACD,GAFD;;AAIA,MAAI,YAAY,aAAa,GAAb,EAAhB;AACA,MAAI,0CAAiB,MAAM,SAAN,EAAiB,IAAjB,EAAjB,EAAJ;AACA,MAAI,YAAY,WAAW,GAAX,CAAe,eAAO;AACpC,WAAO,OAAO,GAAP,CAAW;AAAA,aAAe,YAAY,GAAZ,CAAf;AAAA,KAAX,CAAP;AACD,GAFe,CAAhB;AAGA,SAAO,UAAU,GAAV,CAAc,iBAAS;AAC5B,WAAO,MAAM,MAAN,CAAa;AAAA,aAAQ,QAAQ,IAAhB;AAAA,KAAb,CAAP;AACD,GAFM,CAAP;AAID,CAjBD;;QAoBS,G,GAAA,G;;AAGT;AACA;AACA;AACA;AACA;AACA;AACE;AACF","file":"zip.js","sourcesContent":["'use strict'\n\nconst zip = function () {\n  let values = Object.keys(arguments).map(key => arguments[key])\n  let valueLengths = values.map(value => value.length)\n\n  Array.prototype.max = function() {\n    return Math.max.apply(null, this);\n  };\n\n  let maxLength = valueLengths.max()\n  let rangeToMax = [...Array(maxLength).keys()]\n  let uncompact = rangeToMax.map(idx => {\n    return values.map(valuesArray => valuesArray[idx])\n  })\n  return uncompact.map(array => {\n    return array.filter(item => item != null)\n  })\n\n}\n\n\nexport { zip }\n\n\n// let output = []\n// for (let i = 0; i < arguments.length; i++) {\n//   for (let j = 0; j < arguments[i].length; j++) {\n//     output.splice(j, 0, arguments[i][j])\n//   }\n// }\n  // console.log(\"arguments \", arguments)\n// return 1\n"]}