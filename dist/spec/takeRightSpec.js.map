{"version":3,"sources":["../../src/spec/takeRightSpec.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA,SAAS,WAAT,EAAsB,YAAM;AAC1B,KAAG,8DAAH,EAAmE,YAAM;AACvE,WAAO,0BAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAX,EAAyB,CAAzB,CAAP,EAAsC,OAAtC,CAA+C,CAAC,CAAD,EAAI,CAAJ,CAA/C;AACD,GAFD;;AAIA,KAAG,wDAAH,EAA6D,YAAM;AACjE,WAAO,0BAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAX,EAAyB,CAAzB,CAAP,EAAsC,OAAtC,CAA+C,EAA/C;AACD,GAFD;;AAIA,KAAG,yDAAH,EAA8D,YAAM;AAClE,WAAO,0BAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAX,CAAP,EAAmC,OAAnC,CAA4C,CAAC,CAAD,CAA5C;AACD,GAFD;AAGD,CAZD","file":"takeRightSpec.js","sourcesContent":["import _ from 'lodash'\nimport {takeRight} from '../lib/takeRight.js'\n\ndescribe(\"takeRight\", () => {\n  it(\"Creates a slice of array with n elements taken from the end.\", () => {\n    expect(takeRight( [1, 2, 3, 4], 2 ) ).toEqual( [3, 4] )\n  })\n\n  it(\"if you pass zero number it should return a empty array\", () => {\n    expect(takeRight( [1, 2, 3, 4], 0 ) ).toEqual( [] )\n  })\n\n  it(\"if you don't pass any number it should take one number.\", () => {\n    expect(takeRight( [1, 2, 3, 4] ) ).toEqual( [4] )\n  })\n})\n"]}