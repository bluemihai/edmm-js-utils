{"version":3,"sources":["../../src/spec/takeSpec.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AAEA,SAAS,MAAT,EAAiB,YAAM;AACrB,MAAI,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAV;AACA,KAAG,oEAAH,EAAyE,YAAM;AAC7E,WAAO,gBAAM,GAAN,EAAW,CAAX,CAAP,EAAwB,OAAxB,CAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AACD,GAFD;;AAIA,KAAG,wDAAH,EAA6D,YAAM;AACjE,WAAO,gBAAM,GAAN,EAAW,CAAX,CAAP,EAAwB,OAAxB,CAAiC,EAAjC;AACD,GAFD;;AAIA,KAAG,yDAAH,EAA8D,YAAM;AAClE,WAAO,gBAAM,GAAN,CAAP,EAAqB,OAArB,CAA8B,CAAC,CAAD,CAA9B;AACD,GAFD;AAGD,CAbD","file":"takeSpec.js","sourcesContent":["import _ from 'lodash'\nimport {take} from '../lib/take.js'\n\ndescribe(\"take\", () => {\n  let arr = [1, 2, 3, 4]\n  it(\"Creates a slice of array with n elements taken from the beginning.\", () => {\n    expect(take( arr, 2 ) ).toEqual( [1, 2] )\n  })\n\n  it(\"if you pass zero number it should return a empty array\", () => {\n    expect(take( arr, 0 ) ).toEqual( [] )\n  })\n\n  it(\"if you don't pass any number it should take one number.\", () => {\n    expect(take( arr ) ).toEqual( [1] )\n  })\n})\n"]}