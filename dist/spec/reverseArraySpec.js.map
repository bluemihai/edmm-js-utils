{"version":3,"sources":["../../src/spec/reverseArraySpec.js"],"names":[],"mappings":";;AAAA,IAAM,IAAI,QAAQ,QAAR,CAAV;AACA,IAAM,OAAO,QAAQ,wBAAR,CAAb;;AAGA,SAAS,cAAT,EAAyB,YAAM;AAC7B,MAAM,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAV;AACA,KAAG,qCAAH,EAA0C,YAAM;AAC9C,WAAO,KAAK,YAAL,CAAkB,CAAlB,CAAP,EAA6B,OAA7B,CAAqC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAArC;AACD,GAFD;;AAIA;AACA,KAAG,uDAAH,EAA4D,YAAM;AAChE,QAAM,OAAO,OAAO,MAAP,CAAe,EAAf,EAAmB,CAAnB,CAAb;AACA,QAAM,iBAAiB,EAAE,OAAF,CAAW,IAAX,CAAvB;AACA,WAAQ,KAAK,YAAL,CAAkB,CAAlB,CAAR,EAA+B,OAA/B,CAAwC,cAAxC;AACD,GAJD;AAKD,CAZD","file":"reverseArraySpec.js","sourcesContent":["const _ = require('lodash')\nconst edmm = require('../lib/reverseArray.js')\n\n\ndescribe(\"reverseArray\", () => {\n  const a = [7, 2, 0, 8, 3, 5]\n  it(\"checks that the array gets reversed\", () => {\n    expect(edmm.reverseArray(a)).toEqual([5, 3, 8, 0, 2, 7])\n  })\n\n  // Additional optional test to ensure more precise lodash duplication.\n  it(\"checks that the output is the same as lodash's output\", () => {\n    const copy = Object.assign( [], a )\n    const lodashReversed = _.reverse( copy )\n    expect( edmm.reverseArray(a) ).toEqual( lodashReversed )\n  })\n})\n"]}